FROM python:3.10-slim-bullseye

LABEL maintainer="foo@bar.com"
ARG TZ='Asia/Shanghai'

ARG CHATGPT_ON_WECHAT_VER

RUN echo /etc/apt/sources.list
# RUN sed -i 's/deb.debian.org/mirrors.tuna.tsinghua.edu.cn/g' /etc/apt/sources.list
ENV BUILD_PREFIX=/app

ADD . ${BUILD_PREFIX}

RUN apt-get update \
    &&apt-get install -y --no-install-recommends bash ffmpeg espeak libavcodec-extra\
    && cd ${BUILD_PREFIX} \
    && cp config-template.json config.json \
    && /usr/local/bin/python -m pip install --no-cache --upgrade pip \
    && pip install --no-cache -r requirements.txt \
    && pip install --no-cache -r requirements-optional.txt \
    && pip install azure-cognitiveservices-speech

WORKDIR ${BUILD_PREFIX}

ADD docker/entrypoint.sh /entrypoint.sh

# 给/entrypoint.sh脚本文件添加执行权限。chmod +x命令是改变文件的权限，+x表示添加执行权限。
RUN chmod +x /entrypoint.sh \
    # 创建/home/noroot目录
    && mkdir -p /home/noroot \
    # 创建一个新的系统组，-r表示创建系统组，组名为noroot。
    && groupadd -r noroot \
    # 创建一个新的系统用户，-r表示创建系统用户，-g noroot指定用户组为noroot，-s /bin/bash设置默认的shell为bash，-d /home/noroot设置用户的家目录为/home/noroot，最后的noroot是新用户的用户名。
    && useradd -r -g noroot -s /bin/bash -d /home/noroot noroot \
    # chown -R表示递归地改变指定目录及其子目录下所有文件的所有者。将/home/noroot、${BUILD_PREFIX}（一个环境变量，通常在Dockerfile中定义）和/usr/local/lib目录的所有权更改为用户noroot和组noroot。 \
    # 一般在运行容器时通过环境变量或其他安全方式设置用户的密码。
    && chown -R noroot:noroot /home/noroot ${BUILD_PREFIX} /usr/local/lib

# 设置接下来的RUN、CMD等命令将以noroot用户身份执行，而不是默认的root用户。
USER noroot

# ENTRYPOINT 是Dockerfile中的一个关键字，用于指定容器启动时要运行的命令或脚本。在这里，它指定了 /entrypoint.sh 作为容器的入口点。
# /entrypoint.sh 是一个脚本文件，它将在容器启动时执行。通常，这个脚本用于配置容器环境、启动应用程序或执行其他初始化操作。
ENTRYPOINT ["/entrypoint.sh"]
